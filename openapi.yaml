openapi: 3.0.3
info:
  title: Metastore Viewer API
  description: API for retrieving metadata from Hudi, Delta, Iceberg, and Parquet tables stored in S3/MinIO.
  version: 1.0.0
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://127.0.0.1:8000
    description: Local development server
  - url: https://api.yourdomain.com
    description: Production server

security:
  - BearerAuth: []


paths:
  /auth/login:
    post:
      summary: Login
      description: Login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bucket_access_key_id:
                  type: string
                  example: minio
                bucket_name:
                  type: string
                  example: warehouse
                bucket_region:
                  type: string
                  example: ap-south-1
                bucket_secret_access_key:
                  type: string
                  example: minio123
                bucket_type:
                  type: string
                  example: Other
                bucket_uri:
                  type: string
                  example: http://minio:9000
            example:
              bucket_access_key_id: minio
              bucket_name: warehouse
              bucket_region: ap-south-1
              bucket_secret_access_key: minio123
              bucket_type: Other
              bucket_uri: http://minio:9000
      responses:
        '200':
          description: ''
  /bucket/scan:
    post:
      summary: Scan
      description: Scan
      operationId: scan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                maxDepth:
                  type: number
                  example: 2
            example:
              maxDepth: 2
      responses:
        '200':
          description: ''
  /bucket/scanParquet:
    post:
      summary: Parquet Scan
      description: Parquet Scan
      operationId: parquetScan
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                directoryPath:
                  type: string
                  example: s3://warehouse/customer_par
            example:
              directoryPath: s3://warehouse/customer_par
      responses:
        '200':
          description: ''
  /delta/commits:
    post:
      summary: Delta Commits
      description: Delta Commits
      operationId: deltaCommits
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deltaDirectory:
                  type: string
                  example: warehouse/delta_users
            example:
              deltaDirectory: warehouse/delta_users
      responses:
        '200':
          description: ''
  /delta/commitLog:
    post:
      summary: Delta Commits Log
      description: Delta Commits Log
      operationId: deltaCommitsLog
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deltaDirectory:
                  type: string
                  example: warehouse/delta_users
            example:
              deltaDirectory: warehouse/delta_users
      responses:
        '200':
          description: ''
  /delta/details:
    post:
      summary: Delta Details
      description: Delta Details
      operationId: deltaDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commitFilePath:
                  type: string
                  example: warehouse/delta_users/_delta_log/00000000000000000001.json
            example:
              commitFilePath: warehouse/delta_users/_delta_log/00000000000000000001.json
      responses:
        '200':
          description: ''
  /delta/commitSchema:
    post:
      summary: Delta Commit Schema
      description: Delta Commit Schema
      operationId: deltaCommitSchema
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commitName:
                  type: string
                  example: 00000000000000000010.json
                deltaDirectory:
                  type: string
                  example: warehouse/delta_users
            example:
              commitName: 00000000000000000010.json
              deltaDirectory: warehouse/delta_users
      responses:
        '200':
          description: ''
  /delta/checkpointSchema:
    post:
      summary: Delta Checkpoint Schema
      description: Delta Checkpoint Schema
      operationId: deltaCheckpointSchema
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deltaDirectory:
                  type: string
                  example: s3://warehouse/delta_users
                filePath:
                  type: string
                  example: >-
                    s3://warehouse/delta_users/_delta_log/00000000000000000010.checkpoint.parquet
            example:
              deltaDirectory: s3://warehouse/delta_users
              filePath: >-
                s3://warehouse/delta_users/_delta_log/00000000000000000010.checkpoint.parquet
      responses:
        '200':
          description: ''
  /delta/smallFiles:
    post:
      summary: Delta SmallFiles
      description: Delta SmallFiles
      operationId: deltaSmallfiles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deltaDirectory:
                  type: string
                  example: warehouse/delta_users
            example:
              deltaDirectory: warehouse/delta_users
      responses:
        '200':
          description: ''
  /delta/smallFilesCSV:
    post:
      summary: Delta SmallFilesCSV
      description: Delta SmallFilesCSV
      operationId: deltaSmallfilescsv
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deltaDirectory:
                  type: string
                  example: warehouse/delta_users
            example:
              deltaDirectory: warehouse/delta_users
      responses:
        '200':
          description: ''
  /delta/snapshots:
    post:
      summary: Delta Snapshots
      description: Delta Snapshots
      operationId: deltaSnapshots
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deltaDirectory:
                  type: string
                  example: warehouse/delta_users
            example:
              deltaDirectory: warehouse/delta_users
      responses:
        '200':
          description: ''
  /delta/snapshotSize:
    post:
      summary: Delta Snapshots Details
      description: Delta Snapshots Details
      operationId: deltaSnapshotsDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deltaDirectory:
                  type: string
                  example: warehouse/delta_users
            example:
              deltaDirectory: warehouse/delta_users
      responses:
        '200':
          description: ''
  /delta/sampleData:
    post:
      summary: Delta Sample Data
      description: Delta Sample Data
      operationId: deltaSampleData
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filePath:
                  type: string
                  example: >-
                    warehouse/delta_users/part-00000-17250a06-e634-4d3f-8094-27f5b8d31036-c000.snappy.parquet
                limit:
                  type: number
                  example: 5
            example:
              filePath: >-
                warehouse/delta_users/part-00000-17250a06-e634-4d3f-8094-27f5b8d31036-c000.snappy.parquet
              limit: 5
      responses:
        '200':
          description: ''
  /hudi/versioning:
    post:
      summary: Hudi Partitions
      description: Hudi Partitions
      operationId: hudiPartitions
      parameters:
        - name: endpoint
          in: query
          schema:
            type: string
            example: http://minio:9000
        - name: access_key
          in: query
          schema:
            type: string
            example: minio
        - name: secret_key
          in: query
          schema:
            type: string
            example: minio123
        - name: bucket_name
          in: query
          schema:
            type: string
            example: warehouse
        - name: hudi_table_path
          in: query
          schema:
            type: string
            example: dummy_hudi_table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hudi_table_path:
                  type: string
                  example: dummy_hudi_table
            example:
              hudi_table_path: dummy_hudi_table
      responses:
        '200':
          description: ''
  /hudi/sample-data:
    post:
      summary: Hudi Sample Data
      description: Hudi Sample Data
      operationId: hudiSampleData
      parameters:
        - name: endpoint
          in: query
          schema:
            type: string
            example: http://minio:9000
        - name: access_key
          in: query
          schema:
            type: string
            example: minio
        - name: secret_key
          in: query
          schema:
            type: string
            example: minio123
        - name: bucket_name
          in: query
          schema:
            type: string
            example: warehouse
        - name: hudi_table_path
          in: query
          schema:
            type: string
            example: dummy_hudi_table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hudi_table_path:
                  type: string
                  example: dummy_hudi_table
            example:
              hudi_table_path: dummy_hudi_table
      responses:
        '200':
          description: ''
  /hudi/key-metrics:
    post:
      summary: Hudi KeyMetrics
      description: Hudi KeyMetrics
      operationId: hudiKeymetrics
      parameters:
        - name: endpoint
          in: query
          schema:
            type: string
            example: http://minio:9000
        - name: access_key
          in: query
          schema:
            type: string
            example: minio
        - name: secret_key
          in: query
          schema:
            type: string
            example: minio123
        - name: bucket_name
          in: query
          schema:
            type: string
            example: warehouse
        - name: hudi_table_path
          in: query
          schema:
            type: string
            example: dummy_hudi_table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hudi_table_path:
                  type: string
                  example: dummy_hudi_table
            example:
              hudi_table_path: dummy_hudi_table
      responses:
        '200':
          description: ''
  /hudi/schema:
    post:
      summary: Hudi Schema
      description: Hudi Schema
      operationId: hudiSchema
      parameters:
        - name: endpoint
          in: query
          schema:
            type: string
            example: http://minio:9000
        - name: access_key
          in: query
          schema:
            type: string
            example: minio
        - name: secret_key
          in: query
          schema:
            type: string
            example: minio123
        - name: bucket_name
          in: query
          schema:
            type: string
            example: warehouse
        - name: hudi_table_path
          in: query
          schema:
            type: string
            example: dummy_hudi_table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hudi_table_path:
                  type: string
                  example: dummy_hudi_table
            example:
              hudi_table_path: dummy_hudi_table
      responses:
        '200':
          description: ''
  /hudi/tables:
    post:
      summary: Hudi Tables
      description: Hudi Tables
      operationId: hudiTables
      parameters:
        - name: endpoint
          in: query
          schema:
            type: string
            example: http://minio:9000
        - name: access_key
          in: query
          schema:
            type: string
            example: minio
        - name: secret_key
          in: query
          schema:
            type: string
            example: minio123
        - name: bucket_name
          in: query
          schema:
            type: string
            example: warehouse
        - name: hudi_table_path
          in: query
          schema:
            type: string
            example: dummy_hudi_table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hudi_table_path:
                  type: string
                  example: dummy_hudi_table
            example:
              hudi_table_path: dummy_hudi_table
      responses:
        '200':
          description: ''
  /hudi/small-files-warning:
    post:
      summary: Hudi Small Files
      description: Hudi Small Files
      operationId: hudiSmallFiles
      parameters:
        - name: endpoint
          in: query
          schema:
            type: string
            example: http://minio:9000
        - name: access_key
          in: query
          schema:
            type: string
            example: minio
        - name: secret_key
          in: query
          schema:
            type: string
            example: minio123
        - name: bucket_name
          in: query
          schema:
            type: string
            example: warehouse
        - name: hudi_table_path
          in: query
          schema:
            type: string
            example: dummy_hudi_table
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hudi_table_path:
                  type: string
                  example: dummy_hudi_table
            example:
              hudi_table_path: dummy_hudi_table
      responses:
        '200':
          description: ''
  /iceberg/schema/details:
    post:
      summary: Iceberg Schema Details
      description: Iceberg Schema Details
      operationId: icebergSchemaDetails
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
  /iceberg/schema/sampleData:
    post:
      summary: Iceberg Sample Data
      description: Iceberg Sample Data
      operationId: icebergSampleData
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
  /iceberg/properties/show:
    post:
      summary: Iceberg Properties
      description: Iceberg Properties
      operationId: icebergProperties
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
  /iceberg/properties/manifestFiles:
    post:
      summary: Iceberg Manifest Files
      description: Iceberg Manifest Files
      operationId: icebergManifestFiles
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
  /iceberg/versions/all:
    post:
      summary: Iceberg Versions
      description: Iceberg Versions
      operationId: icebergVersions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
  /iceberg/keyMetrics/fileData:
    post:
      summary: Iceberg KeyMetrics
      description: Iceberg KeyMetrics
      operationId: icebergKeymetrics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
  /iceberg/keyMetrics/overhead:
    post:
      summary: Iceberg Overhead
      description: Iceberg Overhead
      operationId: icebergOverhead
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
  /iceberg/keyMetrics/overheadCSV:
    post:
      summary: Iceberg OverheadCSV
      description: Iceberg OverheadCSV
      operationId: icebergOverheadcsv
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
  /iceberg/snapshots/show:
    post:
      summary: Iceberg Snapshots
      description: Iceberg Snapshots
      operationId: icebergSnapshots
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                icebergPath:
                  type: string
                  example: >-
                    s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
            example:
              icebergPath: s3://warehouse/customer_iceberg-08c4506ce0094a3ba4a6850a3c990478
      responses:
        '200':
          description: ''
tags: []

